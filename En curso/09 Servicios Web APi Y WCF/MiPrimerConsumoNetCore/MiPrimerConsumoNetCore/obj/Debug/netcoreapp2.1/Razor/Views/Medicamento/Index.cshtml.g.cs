#pragma checksum "E:\GIT\En curso\09 Servicios Web APi Y WCF\MiPrimerConsumoNetCore\MiPrimerConsumoNetCore\Views\Medicamento\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5eeb845b4e524e8242aefb3e05fc65d15a3698f1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Medicamento_Index), @"mvc.1.0.view", @"/Views/Medicamento/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Medicamento/Index.cshtml", typeof(AspNetCore.Views_Medicamento_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\GIT\En curso\09 Servicios Web APi Y WCF\MiPrimerConsumoNetCore\MiPrimerConsumoNetCore\Views\_ViewImports.cshtml"
using MiPrimerConsumoNetCore;

#line default
#line hidden
#line 2 "E:\GIT\En curso\09 Servicios Web APi Y WCF\MiPrimerConsumoNetCore\MiPrimerConsumoNetCore\Views\_ViewImports.cshtml"
using MiPrimerConsumoNetCore.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5eeb845b4e524e8242aefb3e05fc65d15a3698f1", @"/Views/Medicamento/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c91127a33c6a53055ffdc5495260c916eb9760c5", @"/Views/_ViewImports.cshtml")]
    public class Views_Medicamento_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\GIT\En curso\09 Servicios Web APi Y WCF\MiPrimerConsumoNetCore\MiPrimerConsumoNetCore\Views\Medicamento\Index.cshtml"
  
    Layout=null;

#line default
#line hidden
            BeginContext(27, 29, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n");
            EndContext();
            BeginContext(56, 9800, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "28917e97f49c4b02bc953f6ab45f83ea", async() => {
                BeginContext(62, 9787, true);
                WriteLiteral(@"
    <!--bootstrap-->
    <!--css-->
    <link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css"" integrity=""sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l"" crossorigin=""anonymous"">
    <link rel=""stylesheet"" type=""text/css"" href=""https://cdn.datatables.net/v/dt/dt-1.10.23/datatables.min.css"" />
    <!--JS-->
    <script src=""https://code.jquery.com/jquery-3.5.1.slim.min.js"" integrity=""sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"" crossorigin=""anonymous""></script>
    <script src=""https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"" integrity=""sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"" crossorigin=""anonymous""></script>
    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js"" integrity=""sha384-+YQ4JLhjyBLPDQt//I+STsc9iw4uQqACwlvpslubQzn4u2UU2UFM80nGisd026JF"" crossorigin=""anonymous""></script>
    <script type=""text/javascript"" src");
                WriteLiteral(@"=""https://cdn.datatables.net/v/dt/dt-1.10.23/datatables.min.js""></script>
    <!--JS Personalizado-->
    <script>
        window.onload = function () {
            listarMedicamentos();
            listarFormaFarmaceutica();
        }

        function listarFormaFarmaceutica() {
            fetch(""Medicamento/listarFormaFarmaceutica"")
                .then(res => res.json())
                .then(res => {
                    llenarCombo(res);
                });
        }

        function filtrarDatos() {
            var nombreMedicamento = document.getElementById(""txtBuscarNombreMedicamento"").value;

            if (nombreMedicamento != """") {
                fetch(""Medicamento/buscarMedicamentosPorNombre/?nombreMedicamento="" + nombreMedicamento)
                    .then(res => res.json())
                    .then(res => {
                        listar(res);
                    })
            } else {
                listarMedicamentos();
            }
        }

        fu");
                WriteLiteral(@"nction llenarCombo(res) {
            var contenido = """";
            contenido += ""<option value=''>--Seleccione--</option>""

            for (var i = 0; i < res.length; i++) {
                contenido += ""<option value='"" + res[i].iidformafarmaceutica + ""'>"" + res[i].nombreFormaFarmaceutica + ""</option>"";
                // console.log(contenido);
            }
            document.getElementById(""cboFormaFarmaceutica"").innerHTML = contenido;
        }


        function Limpiar() {
            var limpiar = document.getElementsByClassName(""Limpiar"");
            var nlimpiar = limpiar.length;
            for (var i = 0; i < nlimpiar; i++) {
                limpiar[i].value = """";
            }
        }

        function listarMedicamentos() {
            fetch(""Medicamento/listarMedicamentos"")
                .then(res => res.json())
                .then(res => {
                    listar(res);
                });
        }

        function listar(res) {
            var con");
                WriteLiteral(@"tenido = """";
            contenido += ""<table id='table' class = 'table'>"";
            contenido += ""<thead class = 'table-dark'>"";

            //Deinimos la 1ra fila
            contenido += ""<tr>"";

            contenido += ""<th>Id Medicamento</th>"";
            contenido += ""<th>Nombre</th>"";
            contenido += ""<th>Concentracion</th>"";
            contenido += ""<th>Forma Farmaceutica</th>"";
            contenido += ""<th>Stock</th>"";
            contenido += ""<th>Precio</th>"";
            contenido += ""<th>Presentacion</th>"";
            contenido += ""<th>Operaciones</th>"";

            contenido += ""</tr>"";
            contenido += ""</thead>"";

            //Contenido
            contenido += ""<tbody>"";

            for (var i = 0; i < res.length; i++) {
                var item = res[i];
                contenido += ""<tr>"";
                contenido += ""<td>"" + item.iidmedicamento + ""</td>"";
                contenido += ""<td>"" + item.nombre + ""</td>"";
                co");
                WriteLiteral(@"ntenido += ""<td>"" + item.concentracion + ""</td>"";
                contenido += ""<td>"" + item.nombreFormaFarmaceutica + ""</td>"";
                contenido += ""<td>"" + item.stock + ""</td>"";
                contenido += ""<td>"" + item.precio + ""</td>"";
                contenido += ""<td>"" + item.presentacion + ""</td>"";
                contenido += ""<td><input type='button' class='btn btn-primary' onclick='abrirModal("" + item.iidmedicamento + "")' value='Editar'data-toggle='modal' data-target='#exampleModal'/>"";
                contenido += ""<input type='button' onclick='Eliminar("" + item.iidmedicamento + "")' class='btn btn-danger' value='Elminar'/> </td>"";
                contenido += ""</tr>"";
            }

            contenido += ""</tbody>"";
            contenido += ""</table>"";

            document.getElementById(""divTabla"").innerHTML = contenido;
            $('#table').DataTable();
        }

        function Eliminar(iidmedicamento) {
            if (confirm(""Â¿Desea eliminar realmente el re");
                WriteLiteral(@"gistro?"") == 1) {
                fetch(""Medicamento/eliminarMedicamento/?iidMedicamento="" + iidmedicamento)
                    .then(res => res.json())
                    .then(res => {
                        if (res == 1) {
                            listarMedicamentos();
                            alert(""Se elimino correctamente"");
                        } else {
                            alert(""Ocurrio un error"");
                        }
                    })
            }
        }

        function abrirModal(iidMedicamento) {
            Limpiar();
            if (iidMedicamento === 0) {
                document.getElementById(""lblTitulo"").innerHTML = ""Agregar Medicamento"";
            }
            else {
                //console.log(iidMedicamento);
                document.getElementById(""lblTitulo"").innerHTML = ""Editar Medicamento"";

                fetch(""Medicamento/recuperarMedicamento/?iidMedicamento="" + iidMedicamento)
                    .then(res => res.js");
                WriteLiteral(@"on())
                    .then(res => {
                        document.getElementById(""txtIdMedicamento"").value = res.iidmedicamento;
                        document.getElementById(""txtnombre"").value = res.nombre;
                        document.getElementById(""txtconcentracion"").value = res.concentracion;
                        document.getElementById(""cboFormaFarmaceutica"").value = res.iidformafarmaceutica;
                        document.getElementById(""txtprecio"").value = res.precio;
                        document.getElementById(""txtstock"").value = res.stock;
                        document.getElementById(""txtpresentacion"").value = res.presentacion;
                    });
            }
        }

        function datosObligatorios() {
            //Significa que no hay errrores
            var exito = true;
            var contenido = ""<ol style='color:red'>"";
            var obligatorios = document.getElementsByClassName(""obligatorio"");
            var nobligatorio = obligato");
                WriteLiteral(@"rios.length;

            for (var i = 0; i < nobligatorio; i++) {
                if (obligatorios[i].value === """") {
                    exito = false;
                    contenido += ""<li>"" + obligatorios[i].name + "" es obligatorio</li>"";
                }
            }
            contenido += ""</ol>"";
            return { exito, contenido };
        }

        function Guardar() {
            if (confirm(""Â¿Deseas guardar los cambios?"") == 1) {
                var objeto = datosObligatorios();

                if (objeto.exito == false) {
                    document.getElementById(""divError"").innerHTML = objeto.contenido;
                    return;
                } else {
                    document.getElementById(""divError"").innerHTML = """";
                }

                //Capturar los valores
                var iidmedicamento = document.getElementById(""txtIdMedicamento"").value;
                var nombre = document.getElementById(""txtnombre"").value;
                va");
                WriteLiteral(@"r concentracion = document.getElementById(""txtconcentracion"").value;
                var iidformafarmaceutica = document.getElementById(""cboFormaFarmaceutica"").value;
                var precio = document.getElementById(""txtprecio"").value;
                var stock = document.getElementById(""txtstock"").value;
                var presentacion = document.getElementById(""txtpresentacion"").value;

                //Llamada al controller
                var objetoEnviar = {
                    iidmedicamento,
                    nombre,
                    concentracion,
                    iidformafarmaceutica,
                    precio,
                    stock,
                    presentacion
                };

                fetch(""Medicamento/agregaryYEditarMedicamento"", {
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    method: 'POST',
                    body: JSON.stringify(objetoEnviar)
        ");
                WriteLiteral(@"        }).then(res => res.json())
                    .then(res => {
                        if (res == 1) {
                            listarMedicamentos();
                            document.getElementById(""btnCerrar"").click();
                            alert(""Se guardo correctamente"");
                        } else {
                            alert(""Ocurrio un error"");
                        }
                    })
            }
        }
    </script>

    <meta name=""viewport"" content=""width=device-width"" />
    <title>Index</title>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9856, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(9858, 3228, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "db02745dfa4542c3b279bc487fe73724", async() => {
                BeginContext(9864, 3215, true);
                WriteLiteral(@"
    <!-- Button trigger modal -->
    <button onclick=""abrirModal(0)"" type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#exampleModal"">
        Agregar
    </button>

    <div class=""form-group"">
        <label>Ingresa nombre del medicamento</label>
        <input onkeyup=""filtrarDatos()"" type=""text"" id=""txtBuscarNombreMedicamento"" class=""form-control"" />
    </div>

    <div id=""divTabla"">
    </div>


    <!-- Modal -->
    <div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""lblTitulo""></h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body");
                WriteLiteral(@""">
                    <div class=""form-group"">
                        <label>Id Medicamento</label>
                        <input type=""text"" class=""form-control Limpiar"" id=""txtIdMedicamento"" readonly />
                    </div>
                    <div class=""form-group"">
                        <label>Nombre</label>
                        <input type=""text"" name=""Nombre"" class=""form-control Limpiar obligatorio"" id=""txtnombre"" />
                    </div>
                    <div class=""form-group"">
                        <label>Concentracion</label>
                        <input type=""text"" name=""Concentracion"" class=""form-control Limpiar obligatorio"" id=""txtconcentracion"" />
                    </div>
                    <div class=""form-group"">
                        <label>Forma Farmaceutica</label>
                        <select id=""cboFormaFarmaceutica"" name=""Forma Farmaceutica"" class=""form-control Limpiar obligatorio"">
                        </select>
                    ");
                WriteLiteral(@"</div>
                    <div class=""form-group"">
                        <label>Precio</label>
                        <input type=""number"" id=""txtprecio"" name=""Precio"" class=""form-control Limpiar obligatorio"" />
                    </div>
                    <div class=""form-group"">
                        <label>Stock</label>
                        <input type=""number"" id=""txtstock"" name=""Stock"" class=""form-control Limpiar obligatorio"" />
                    </div>
                    <div class=""form-group"">
                        <label>Presentacion</label>
                        <input type=""text"" id=""txtpresentacion"" name=""Presentacion"" class=""form-control Limpiar obligatorio"" />
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" onclick=""Guardar()"" class=""btn btn-primary"">Guardar</button>
                    <button type=""button"" id=""btnCerrar"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar<");
                WriteLiteral("/button>\r\n                </div>\r\n                <div id=\"divError\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13086, 9, true);
            WriteLiteral("\r\n</html>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
